{
  "_args": [
    [
      {
        "raw": "gulp-rev-replace@~0.4.2",
        "scope": null,
        "escapedName": "gulp-rev-replace",
        "name": "gulp-rev-replace",
        "rawSpec": "~0.4.2",
        "spec": ">=0.4.2 <0.5.0",
        "type": "range"
      },
      "C:\\Prismpay\\Projects\\settings"
    ]
  ],
  "_from": "gulp-rev-replace@>=0.4.2 <0.5.0",
  "_id": "gulp-rev-replace@0.4.4",
  "_inCache": true,
  "_location": "/gulp-rev-replace",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gulp-rev-replace-0.4.4.tgz_1517634496299_0.4155755750834942"
  },
  "_npmUser": {
    "name": "jamesknelson",
    "email": "james@jamesknelson.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "ansi-cyan": "0.1.1",
    "ansi-red": "0.1.1",
    "arr-flatten": "1.1.0"
  },
  "_requested": {
    "raw": "gulp-rev-replace@~0.4.2",
    "scope": null,
    "escapedName": "gulp-rev-replace",
    "name": "gulp-rev-replace",
    "rawSpec": "~0.4.2",
    "spec": ">=0.4.2 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-rev-replace/-/gulp-rev-replace-0.4.4.tgz",
  "_shasum": "9696854131024baf264010b1f51ff8a1382ab94a",
  "_shrinkwrap": null,
  "_spec": "gulp-rev-replace@~0.4.2",
  "_where": "C:\\Prismpay\\Projects\\settings",
  "author": {
    "name": "James K Nelson",
    "email": "james@numbattech.com",
    "url": "http://jamesknelson.com"
  },
  "bugs": {
    "url": "https://github.com/jamesknelson/gulp-rev-replace/issues"
  },
  "dependencies": {
    "plugin-error": "^0.1.2",
    "through2": "^2.0.0"
  },
  "description": "Rewrite occurences of filenames which have been renamed by gulp-rev",
  "devDependencies": {
    "event-stream": "^3.2.2",
    "gulp-filter": "^3.0.1",
    "gulp-rev": "^6.0.1",
    "mocha": "^2.3.4",
    "vinyl": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2yiDel/TGamn/HgHyo8H1rYEEL2zLsOYODerItoX8batOo0gPAe7uX7t6NlaqB7FEHpS5tGzUr5CKUEmrgdHyQ==",
    "shasum": "9696854131024baf264010b1f51ff8a1382ab94a",
    "tarball": "https://registry.npmjs.org/gulp-rev-replace/-/gulp-rev-replace-0.4.4.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "90e320e7f45a6a2304bbb437cd15b6d604935192",
  "homepage": "https://github.com/jamesknelson/gulp-rev-replace#readme",
  "keywords": [
    "gulpplugin",
    "rev",
    "revision",
    "version",
    "replace",
    "asset"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jamesknelson",
      "email": "james@numbat.com.au"
    }
  ],
  "name": "gulp-rev-replace",
  "optionalDependencies": {},
  "readme": "[gulp](https://github.com/wearefractal/gulp)-rev-replace [![Build Status](https://travis-ci.org/jamesknelson/gulp-rev-replace.svg?branch=master)](https://travis-ci.org/jamesknelson/gulp-rev-replace)\n================\n\nRewrite occurrences of filenames which have been renamed by gulp-rev\n\n## Install\n\n```bash\n$ npm install --save-dev gulp-rev-replace\n```\n\n\n## Usage\n\nPipe through a stream which has both the files you want to be updated, as well as the files which have been renamed.\n\nFor example, we can use [gulp-useref](https://github.com/jonkemp/gulp-useref) to concatenate assets in an index.html,\nand then use [gulp-rev](https://github.com/sindresorhus/gulp-rev) and gulp-rev-replace to cache-bust them.\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\nvar revReplace = require('gulp-rev-replace');\nvar useref = require('gulp-useref');\nvar filter = require('gulp-filter');\nvar uglify = require('gulp-uglify');\nvar csso = require('gulp-csso');\n\ngulp.task(\"index\", function() {\n  var jsFilter = filter(\"**/*.js\", { restore: true });\n  var cssFilter = filter(\"**/*.css\", { restore: true });\n  var indexHtmlFilter = filter(['**/*', '!**/index.html'], { restore: true });\n\n  return gulp.src(\"src/index.html\")\n    .pipe(useref())      // Concatenate with gulp-useref\n    .pipe(jsFilter)\n    .pipe(uglify())             // Minify any javascript sources\n    .pipe(jsFilter.restore)\n    .pipe(cssFilter)\n    .pipe(csso())               // Minify any CSS sources\n    .pipe(cssFilter.restore)\n    .pipe(indexHtmlFilter)\n    .pipe(rev())                // Rename the concatenated files (but not index.html)\n    .pipe(indexHtmlFilter.restore)\n    .pipe(revReplace())         // Substitute in new filenames\n    .pipe(gulp.dest('public'));\n});\n```\n\nIt is also possible to use gulp-rev-replace without gulp-useref:\n\n```js\nvar rev = require(\"gulp-rev\");\nvar revReplace = require(\"gulp-rev-replace\");\ngulp.task(\"revision\", [\"dist:css\", \"dist:js\"], function(){\n  return gulp.src([\"dist/**/*.css\", \"dist/**/*.js\"])\n    .pipe(rev())\n    .pipe(gulp.dest(opt.distFolder))\n    .pipe(rev.manifest())\n    .pipe(gulp.dest(opt.distFolder))\n})\n\ngulp.task(\"revreplace\", [\"revision\"], function(){\n  var manifest = gulp.src(\"./\" + opt.distFolder + \"/rev-manifest.json\");\n\n  return gulp.src(opt.srcFolder + \"/index.html\")\n    .pipe(revReplace({manifest: manifest}))\n    .pipe(gulp.dest(opt.distFolder));\n});\n```\n\n\n## API\n\n### revReplace(options)\n\n#### options.canonicalUris\nType: `boolean`\n\nDefault: `true`\n\nUse canonical Uris when replacing filePaths, i.e. when working with filepaths\nwith non forward slash (`/`) path separators we replace them with forward slash.\n\n#### options.replaceInExtensions\nType: `Array`\n\nDefault: `['.js', '.css', '.html', '.hbs']`\n\nOnly substitute in new filenames in files of these types.\n\n#### options.prefix\nType: `string`\n\nDefault: ``\n\nAdd the prefix string to each replacement.\n\n#### options.manifest\nType: `Stream` (e.g., `gulp.src()`)\n\nRead JSON manifests written out by `rev`. Allows replacing filenames that were\n`rev`ed prior to the current task.\n\n#### options.modifyUnreved, options.modifyReved\nType: `Function`\n\nModify the name of the unreved/reved files before using them. The filename is\npassed to the function as the first argument.\n\nFor example, if in your manifest you have:\n\n```js\n{\"js/app.js.map\": \"js/app-98adc164.js.map\"}\n```\n\nIf you wanted to get rid of the `js/` path just for `.map` files (because they\nare sourcemaps and the references to them are relative, not absolute) you could\ndo the following:\n\n```js\nfunction replaceJsIfMap(filename) {\n    if (filename.indexOf('.map') > -1) {\n        return filename.replace('js/', '');\n    }\n    return filename;\n}\n\nreturn gulp.src(opt.distFolder + '**/*.js')\n    .pipe(revReplace({\n        manifest: manifest,\n        modifyUnreved: replaceJsIfMap,\n        modifyReved: replaceJsIfMap\n    }))\n    .pipe(gulp.dest(opt.distFolder));\n```\n\n## Contributors\n\n- Chad Jablonski\n- Denis Parchenko\n- Evgeniy Vasilev\n- George Song\n- Håkon K. Eide\n- Juan Lasheras\n- Majid Burney\n- Simon Ihmig\n- Vincent Voyer\n- Bradley Abrahams\n\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT) © [James K Nelson](http://jamesknelson.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jamesknelson/gulp-rev-replace.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.4.4"
}
